// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate the whole dmmf is passed Type definitions (Snapshot) of pgfy return values are generated according to Prisma's Schema 1`] = `
"import { Prisma } from \\"@prisma/client\\";
import { Decimal } from \\"@prisma/client/runtime\\";
import { PGTypes } from \\"@prismagql/prismagql/lib/types/builder\\";
import { PGEnum, RequiredNonNullable } from \\"@prismagql/prismagql/lib/types/common\\";
import { PGObject, PGOutputField, PGOutputFieldOptionsDefault } from \\"@prismagql/prismagql/lib/types/output\\";
import { PGInputFactoryWrapper, PGInputFactoryUnion, PGInputFactory } from \\"@prismagql/prismagql/lib/types/input-factory\\";

type SomeEnumValuesType = [\\"AAA\\", \\"BBB\\", \\"CCC\\"];
type SomeEnum2ValuesType = [\\"Aaa\\", \\"Bbb\\", \\"Ccc\\"];
type SomeEnum3ValuesType = [\\"aaa\\", \\"bbb\\", \\"ccc\\"];
type Model1FieldMapType<Types extends PGTypes> = {
        id: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
        string: PGOutputField<string, any, PGOutputFieldOptionsDefault, Types>;
        json: PGOutputField<string, any, PGOutputFieldOptionsDefault, Types>;
        int: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
        float: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
        boolean: PGOutputField<boolean, any, PGOutputFieldOptionsDefault, Types>;
        bigInt: PGOutputField<bigint, any, PGOutputFieldOptionsDefault, Types>;
        dateTime: PGOutputField<Date, any, PGOutputFieldOptionsDefault, Types>;
        bytes: PGOutputField<Buffer, any, PGOutputFieldOptionsDefault, Types>;
        decimal: PGOutputField<Decimal, any, PGOutputFieldOptionsDefault, Types>;
        nullable: PGOutputField<string | null, any, PGOutputFieldOptionsDefault, Types>;
        list: PGOutputField<string[], any, PGOutputFieldOptionsDefault, Types>;
        enum: PGOutputField<PGEnum<SomeEnumValuesType>, any, PGOutputFieldOptionsDefault, Types>;
        enumList: PGOutputField<Array<PGEnum<SomeEnum2ValuesType>>, any, PGOutputFieldOptionsDefault, Types>;
        enumNullable: PGOutputField<PGEnum<SomeEnum3ValuesType> | null, any, PGOutputFieldOptionsDefault, Types>;
        oneToOne: PGOutputField<PGObject<Model2FieldMapType<Types>, { PrismaModelName: 'Model2' }, Types> | null, any, PGOutputFieldOptionsDefault, Types>;
        oneToMany: PGOutputField<Array<PGObject<Model3FieldMapType<Types>, { PrismaModelName: 'Model3' }, Types>>, any, PGOutputFieldOptionsDefault, Types>;
    };
type Model2FieldMapType<Types extends PGTypes> = {
        id: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
        model1: PGOutputField<PGObject<Model1FieldMapType<Types>, { PrismaModelName: 'Model1' }, Types>, any, PGOutputFieldOptionsDefault, Types>;
        model1Id: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
    };
type Model3FieldMapType<Types extends PGTypes> = {
        id: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
        model1: PGOutputField<PGObject<Model1FieldMapType<Types>, { PrismaModelName: 'Model1' }, Types>, any, PGOutputFieldOptionsDefault, Types>;
        model1Id: PGOutputField<number, any, PGOutputFieldOptionsDefault, Types>;
    };
type PGfyResponseEnums = {
        SomeEnum: PGEnum<SomeEnumValuesType>;
        SomeEnum2: PGEnum<SomeEnum2ValuesType>;
        SomeEnum3: PGEnum<SomeEnum3ValuesType>;
    };
type PGfyResponseObjects<Types extends PGTypes> = {
        Model1: PGObject<Model1FieldMapType<Types>, { PrismaModelName: 'Model1' }, Types>;
        Model2: PGObject<Model2FieldMapType<Types>, { PrismaModelName: 'Model2' }, Types>;
        Model3: PGObject<Model3FieldMapType<Types>, { PrismaModelName: 'Model3' }, Types>;
    };
type PGfyResponseModels = {
        Model1: RequiredNonNullable<Prisma.Model1FindManyArgs>;
        Model2: RequiredNonNullable<Prisma.Model2FindManyArgs>;
        Model3: RequiredNonNullable<Prisma.Model3FindManyArgs>;
    };
type Model1ScalarFieldEnumFactory = PGEnum<['id', 'string', 'json', 'int', 'float', 'boolean', 'bigInt', 'dateTime', 'bytes', 'decimal', 'nullable', 'list', 'enum', 'enumList', 'enumNullable']>;
type Model2ScalarFieldEnumFactory = PGEnum<['id', 'model1Id']>;
type Model3ScalarFieldEnumFactory = PGEnum<['id', 'model1Id']>;
type SortOrderFactory = PGEnum<['asc', 'desc']>;
type JsonNullValueInputFactory = PGEnum<['JsonNull']>;
type QueryModeFactory = PGEnum<['default', 'insensitive']>;
type JsonNullValueFilterFactory = PGEnum<['DbNull', 'JsonNull', 'AnyNull']>;
type SomeEnumFactory = PGEnum<['AAA', 'BBB', 'CCC']>;
type SomeEnum3Factory = PGEnum<['aaa', 'bbb', 'ccc']>;
type SomeEnum2Factory = PGEnum<['Aaa', 'Bbb', 'Ccc']>;
type FindFirstModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInput: () => PGInputFactoryWrapper<Model1OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model1ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type FindManyModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInput: () => PGInputFactoryWrapper<Model1OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model1ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type AggregateModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model1OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithRelationInput: () => PGInputFactoryWrapper<Model1OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type GroupByModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model1OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithAggregationInputList: () => PGInputFactoryWrapper<Array<Model1OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model1OrderByWithAggregationInput: () => PGInputFactoryWrapper<Model1OrderByWithAggregationInputFactory<Types> | undefined, Types>
            }>;
        by: PGInputFactoryUnion<{
            __default: PGInputFactory<Model1ScalarFieldEnumFactory[], 'enum', Types>,
            Model1ScalarFieldEnumList: PGInputFactory<Model1ScalarFieldEnumFactory[], 'enum', Types>,
            Model1ScalarFieldEnum: PGInputFactory<Model1ScalarFieldEnumFactory, 'enum', Types>
            }>;
        having: () => PGInputFactoryWrapper<Model1ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type FindUniqueModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
    };
type FindFirstModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInput: () => PGInputFactoryWrapper<Model2OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model2ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type FindManyModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInput: () => PGInputFactoryWrapper<Model2OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model2ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type AggregateModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model2OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithRelationInput: () => PGInputFactoryWrapper<Model2OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type GroupByModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model2OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithAggregationInputList: () => PGInputFactoryWrapper<Array<Model2OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model2OrderByWithAggregationInput: () => PGInputFactoryWrapper<Model2OrderByWithAggregationInputFactory<Types> | undefined, Types>
            }>;
        by: PGInputFactoryUnion<{
            __default: PGInputFactory<Model2ScalarFieldEnumFactory[], 'enum', Types>,
            Model2ScalarFieldEnumList: PGInputFactory<Model2ScalarFieldEnumFactory[], 'enum', Types>,
            Model2ScalarFieldEnum: PGInputFactory<Model2ScalarFieldEnumFactory, 'enum', Types>
            }>;
        having: () => PGInputFactoryWrapper<Model2ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type FindUniqueModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types>, Types>;
    };
type FindFirstModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInput: () => PGInputFactoryWrapper<Model3OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model3ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type FindManyModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInput: () => PGInputFactoryWrapper<Model3OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
        distinct: PGInputFactory<Model3ScalarFieldEnumFactory[] | undefined, 'enum', Types>;
    };
type AggregateModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInputList: () => PGInputFactoryWrapper<Array<Model3OrderByWithRelationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithRelationInput: () => PGInputFactoryWrapper<Model3OrderByWithRelationInputFactory<Types> | undefined, Types>
            }>;
        cursor: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type GroupByModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        orderBy: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Array<Model3OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithAggregationInputList: () => PGInputFactoryWrapper<Array<Model3OrderByWithAggregationInputFactory<Types>> | undefined, Types>,
            Model3OrderByWithAggregationInput: () => PGInputFactoryWrapper<Model3OrderByWithAggregationInputFactory<Types> | undefined, Types>
            }>;
        by: PGInputFactoryUnion<{
            __default: PGInputFactory<Model3ScalarFieldEnumFactory[], 'enum', Types>,
            Model3ScalarFieldEnumList: PGInputFactory<Model3ScalarFieldEnumFactory[], 'enum', Types>,
            Model3ScalarFieldEnum: PGInputFactory<Model3ScalarFieldEnumFactory, 'enum', Types>
            }>;
        having: () => PGInputFactoryWrapper<Model3ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>;
        take: PGInputFactory<number | undefined, 'int', Types>;
        skip: PGInputFactory<number | undefined, 'int', Types>;
    };
type FindUniqueModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
    };
type CreateOneModel1Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateInputFactory<Types>, Types>,
            Model1CreateInput: () => PGInputFactoryWrapper<Model1CreateInputFactory<Types>, Types>,
            Model1UncheckedCreateInput: () => PGInputFactoryWrapper<Model1UncheckedCreateInputFactory<Types>, Types>
            }>;
    };
type UpsertOneModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateInputFactory<Types>, Types>,
            Model1CreateInput: () => PGInputFactoryWrapper<Model1CreateInputFactory<Types>, Types>,
            Model1UncheckedCreateInput: () => PGInputFactoryWrapper<Model1UncheckedCreateInputFactory<Types>, Types>
            }>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateInputFactory<Types>, Types>,
            Model1UpdateInput: () => PGInputFactoryWrapper<Model1UpdateInputFactory<Types>, Types>,
            Model1UncheckedUpdateInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateInputFactory<Types>, Types>
            }>;
    };
type CreateManyModel1Factory<Types extends PGTypes> = {
        data: () => PGInputFactoryWrapper<Array<Model1CreateManyInputFactory<Types>>, Types>;
        skipDuplicates: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type DeleteOneModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateOneModel1Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateInputFactory<Types>, Types>,
            Model1UpdateInput: () => PGInputFactoryWrapper<Model1UpdateInputFactory<Types>, Types>,
            Model1UncheckedUpdateInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateManyModel1Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateManyMutationInputFactory<Types>, Types>,
            Model1UpdateManyMutationInput: () => PGInputFactoryWrapper<Model1UpdateManyMutationInputFactory<Types>, Types>,
            Model1UncheckedUpdateManyInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateManyInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
    };
type DeleteManyModel1Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
    };
type CreateOneModel2Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateInputFactory<Types>, Types>,
            Model2CreateInput: () => PGInputFactoryWrapper<Model2CreateInputFactory<Types>, Types>,
            Model2UncheckedCreateInput: () => PGInputFactoryWrapper<Model2UncheckedCreateInputFactory<Types>, Types>
            }>;
    };
type UpsertOneModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateInputFactory<Types>, Types>,
            Model2CreateInput: () => PGInputFactoryWrapper<Model2CreateInputFactory<Types>, Types>,
            Model2UncheckedCreateInput: () => PGInputFactoryWrapper<Model2UncheckedCreateInputFactory<Types>, Types>
            }>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateInputFactory<Types>, Types>,
            Model2UpdateInput: () => PGInputFactoryWrapper<Model2UpdateInputFactory<Types>, Types>,
            Model2UncheckedUpdateInput: () => PGInputFactoryWrapper<Model2UncheckedUpdateInputFactory<Types>, Types>
            }>;
    };
type CreateManyModel2Factory<Types extends PGTypes> = {
        data: () => PGInputFactoryWrapper<Array<Model2CreateManyInputFactory<Types>>, Types>;
        skipDuplicates: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type DeleteOneModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateOneModel2Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateInputFactory<Types>, Types>,
            Model2UpdateInput: () => PGInputFactoryWrapper<Model2UpdateInputFactory<Types>, Types>,
            Model2UncheckedUpdateInput: () => PGInputFactoryWrapper<Model2UncheckedUpdateInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateManyModel2Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateManyMutationInputFactory<Types>, Types>,
            Model2UpdateManyMutationInput: () => PGInputFactoryWrapper<Model2UpdateManyMutationInputFactory<Types>, Types>,
            Model2UncheckedUpdateManyInput: () => PGInputFactoryWrapper<Model2UncheckedUpdateManyInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
    };
type DeleteManyModel2Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>;
    };
type CreateOneModel3Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateInputFactory<Types>, Types>,
            Model3CreateInput: () => PGInputFactoryWrapper<Model3CreateInputFactory<Types>, Types>,
            Model3UncheckedCreateInput: () => PGInputFactoryWrapper<Model3UncheckedCreateInputFactory<Types>, Types>
            }>;
    };
type UpsertOneModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateInputFactory<Types>, Types>,
            Model3CreateInput: () => PGInputFactoryWrapper<Model3CreateInputFactory<Types>, Types>,
            Model3UncheckedCreateInput: () => PGInputFactoryWrapper<Model3UncheckedCreateInputFactory<Types>, Types>
            }>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateInputFactory<Types>, Types>,
            Model3UpdateInput: () => PGInputFactoryWrapper<Model3UpdateInputFactory<Types>, Types>,
            Model3UncheckedUpdateInput: () => PGInputFactoryWrapper<Model3UncheckedUpdateInputFactory<Types>, Types>
            }>;
    };
type CreateManyModel3Factory<Types extends PGTypes> = {
        data: () => PGInputFactoryWrapper<Array<Model3CreateManyInputFactory<Types>>, Types>;
        skipDuplicates: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type DeleteOneModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateOneModel3Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateInputFactory<Types>, Types>,
            Model3UpdateInput: () => PGInputFactoryWrapper<Model3UpdateInputFactory<Types>, Types>,
            Model3UncheckedUpdateInput: () => PGInputFactoryWrapper<Model3UncheckedUpdateInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
    };
type UpdateManyModel3Factory<Types extends PGTypes> = {
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateManyMutationInputFactory<Types>, Types>,
            Model3UpdateManyMutationInput: () => PGInputFactoryWrapper<Model3UpdateManyMutationInputFactory<Types>, Types>,
            Model3UncheckedUpdateManyInput: () => PGInputFactoryWrapper<Model3UncheckedUpdateManyInputFactory<Types>, Types>
            }>;
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
    };
type DeleteManyModel3Factory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
    };
type ExecuteRawFactory<Types extends PGTypes> = {
        query: PGInputFactory<string, 'string', Types>;
        parameters: PGInputFactory<string | undefined, 'json', Types>;
    };
type QueryRawFactory<Types extends PGTypes> = {
        query: PGInputFactory<string, 'string', Types>;
        parameters: PGInputFactory<string | undefined, 'json', Types>;
    };
type Model1WhereInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>,
            Model1WhereInput: () => PGInputFactoryWrapper<Array<Model1WhereInputFactory<Types>> | undefined, Types>,
            Model1WhereInputList: () => PGInputFactoryWrapper<Array<Model1WhereInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model1WhereInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>,
            Model1WhereInput: () => PGInputFactoryWrapper<Array<Model1WhereInputFactory<Types>> | undefined, Types>,
            Model1WhereInputList: () => PGInputFactoryWrapper<Array<Model1WhereInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<StringFilterFactory<Types> | undefined, Types>,
            StringFilter: () => PGInputFactoryWrapper<StringFilterFactory<Types> | undefined, Types>,
            String: PGInputFactory<string | undefined, 'string', Types>
            }>;
        json: () => PGInputFactoryWrapper<JsonFilterFactory<Types> | undefined, Types>;
        int: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<FloatFilterFactory<Types> | undefined, Types>,
            FloatFilter: () => PGInputFactoryWrapper<FloatFilterFactory<Types> | undefined, Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BoolFilterFactory<Types> | undefined, Types>,
            BoolFilter: () => PGInputFactoryWrapper<BoolFilterFactory<Types> | undefined, Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BigIntFilterFactory<Types> | undefined, Types>,
            BigIntFilter: () => PGInputFactoryWrapper<BigIntFilterFactory<Types> | undefined, Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<DateTimeFilterFactory<Types> | undefined, Types>,
            DateTimeFilter: () => PGInputFactoryWrapper<DateTimeFilterFactory<Types> | undefined, Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BytesFilterFactory<Types> | undefined, Types>,
            BytesFilter: () => PGInputFactoryWrapper<BytesFilterFactory<Types> | undefined, Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<DecimalFilterFactory<Types> | undefined, Types>,
            DecimalFilter: () => PGInputFactoryWrapper<DecimalFilterFactory<Types> | undefined, Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<StringNullableFilterFactory<Types> | null | undefined, Types>,
            StringNullableFilter: () => PGInputFactoryWrapper<StringNullableFilterFactory<Types> | null | undefined, Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: () => PGInputFactoryWrapper<StringNullableListFilterFactory<Types> | undefined, Types>;
        enum: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<EnumSomeEnumFilterFactory<Types> | undefined, Types>,
            EnumSomeEnumFilter: () => PGInputFactoryWrapper<EnumSomeEnumFilterFactory<Types> | undefined, Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>
            }>;
        enumList: () => PGInputFactoryWrapper<EnumSomeEnum2NullableListFilterFactory<Types> | undefined, Types>;
        enumNullable: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<EnumSomeEnum3NullableFilterFactory<Types> | null | undefined, Types>,
            EnumSomeEnum3NullableFilter: () => PGInputFactoryWrapper<EnumSomeEnum3NullableFilterFactory<Types> | null | undefined, Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2RelationFilterFactory<Types> | null | undefined, Types>,
            Model2RelationFilter: () => PGInputFactoryWrapper<Model2RelationFilterFactory<Types> | null | undefined, Types>,
            Model2WhereInput: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToMany: () => PGInputFactoryWrapper<Model3ListRelationFilterFactory<Types> | undefined, Types>;
    };
type Model1OrderByWithRelationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        string: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        json: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        boolean: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        dateTime: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bytes: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        nullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        list: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enum: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumList: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumNullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        oneToOne: () => PGInputFactoryWrapper<Model2OrderByWithRelationInputFactory<Types> | undefined, Types>;
        oneToMany: () => PGInputFactoryWrapper<Model3OrderByRelationAggregateInputFactory<Types> | undefined, Types>;
    };
type Model1WhereUniqueInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model1OrderByWithAggregationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        string: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        json: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        boolean: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        dateTime: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bytes: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        nullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        list: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enum: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumList: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumNullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        _count: () => PGInputFactoryWrapper<Model1CountOrderByAggregateInputFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<Model1AvgOrderByAggregateInputFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<Model1MaxOrderByAggregateInputFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<Model1MinOrderByAggregateInputFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<Model1SumOrderByAggregateInputFactory<Types> | undefined, Types>;
    };
type Model1ScalarWhereWithAggregatesInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model1ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model1ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model1ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model1ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model1ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model1ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model1ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model1ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model1ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<StringWithAggregatesFilterFactory<Types> | undefined, Types>,
            StringWithAggregatesFilter: () => PGInputFactoryWrapper<StringWithAggregatesFilterFactory<Types> | undefined, Types>,
            String: PGInputFactory<string | undefined, 'string', Types>
            }>;
        json: () => PGInputFactoryWrapper<JsonWithAggregatesFilterFactory<Types> | undefined, Types>;
        int: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<FloatWithAggregatesFilterFactory<Types> | undefined, Types>,
            FloatWithAggregatesFilter: () => PGInputFactoryWrapper<FloatWithAggregatesFilterFactory<Types> | undefined, Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BoolWithAggregatesFilterFactory<Types> | undefined, Types>,
            BoolWithAggregatesFilter: () => PGInputFactoryWrapper<BoolWithAggregatesFilterFactory<Types> | undefined, Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BigIntWithAggregatesFilterFactory<Types> | undefined, Types>,
            BigIntWithAggregatesFilter: () => PGInputFactoryWrapper<BigIntWithAggregatesFilterFactory<Types> | undefined, Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<DateTimeWithAggregatesFilterFactory<Types> | undefined, Types>,
            DateTimeWithAggregatesFilter: () => PGInputFactoryWrapper<DateTimeWithAggregatesFilterFactory<Types> | undefined, Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<BytesWithAggregatesFilterFactory<Types> | undefined, Types>,
            BytesWithAggregatesFilter: () => PGInputFactoryWrapper<BytesWithAggregatesFilterFactory<Types> | undefined, Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<DecimalWithAggregatesFilterFactory<Types> | undefined, Types>,
            DecimalWithAggregatesFilter: () => PGInputFactoryWrapper<DecimalWithAggregatesFilterFactory<Types> | undefined, Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<StringNullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            StringNullableWithAggregatesFilter: () => PGInputFactoryWrapper<StringNullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: () => PGInputFactoryWrapper<StringNullableListFilterFactory<Types> | undefined, Types>;
        enum: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<EnumSomeEnumWithAggregatesFilterFactory<Types> | undefined, Types>,
            EnumSomeEnumWithAggregatesFilter: () => PGInputFactoryWrapper<EnumSomeEnumWithAggregatesFilterFactory<Types> | undefined, Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>
            }>;
        enumList: () => PGInputFactoryWrapper<EnumSomeEnum2NullableListFilterFactory<Types> | undefined, Types>;
        enumNullable: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<EnumSomeEnum3NullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            EnumSomeEnum3NullableWithAggregatesFilter: () => PGInputFactoryWrapper<EnumSomeEnum3NullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model2WhereInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>,
            Model2WhereInput: () => PGInputFactoryWrapper<Array<Model2WhereInputFactory<Types>> | undefined, Types>,
            Model2WhereInputList: () => PGInputFactoryWrapper<Array<Model2WhereInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model2WhereInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | undefined, Types>,
            Model2WhereInput: () => PGInputFactoryWrapper<Array<Model2WhereInputFactory<Types>> | undefined, Types>,
            Model2WhereInputList: () => PGInputFactoryWrapper<Array<Model2WhereInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        model1: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1RelationFilterFactory<Types> | undefined, Types>,
            Model1RelationFilter: () => PGInputFactoryWrapper<Model1RelationFilterFactory<Types> | undefined, Types>,
            Model1WhereInput: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
    };
type Model2OrderByWithRelationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1: () => PGInputFactoryWrapper<Model1OrderByWithRelationInputFactory<Types> | undefined, Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model2WhereUniqueInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        model1Id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model2OrderByWithAggregationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        _count: () => PGInputFactoryWrapper<Model2CountOrderByAggregateInputFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<Model2AvgOrderByAggregateInputFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<Model2MaxOrderByAggregateInputFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<Model2MinOrderByAggregateInputFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<Model2SumOrderByAggregateInputFactory<Types> | undefined, Types>;
    };
type Model2ScalarWhereWithAggregatesInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model2ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model2ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model2ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model2ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model2ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model2ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model2ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model2ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model2ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
    };
type Model3WhereInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>,
            Model3WhereInput: () => PGInputFactoryWrapper<Array<Model3WhereInputFactory<Types>> | undefined, Types>,
            Model3WhereInputList: () => PGInputFactoryWrapper<Array<Model3WhereInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model3WhereInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>,
            Model3WhereInput: () => PGInputFactoryWrapper<Array<Model3WhereInputFactory<Types>> | undefined, Types>,
            Model3WhereInputList: () => PGInputFactoryWrapper<Array<Model3WhereInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        model1: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1RelationFilterFactory<Types> | undefined, Types>,
            Model1RelationFilter: () => PGInputFactoryWrapper<Model1RelationFilterFactory<Types> | undefined, Types>,
            Model1WhereInput: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
    };
type Model3OrderByWithRelationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1: () => PGInputFactoryWrapper<Model1OrderByWithRelationInputFactory<Types> | undefined, Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3WhereUniqueInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model3OrderByWithAggregationInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        _count: () => PGInputFactoryWrapper<Model3CountOrderByAggregateInputFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<Model3AvgOrderByAggregateInputFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<Model3MaxOrderByAggregateInputFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<Model3MinOrderByAggregateInputFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<Model3SumOrderByAggregateInputFactory<Types> | undefined, Types>;
    };
type Model3ScalarWhereWithAggregatesInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model3ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereWithAggregatesInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereWithAggregatesInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereWithAggregatesInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereWithAggregatesInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            IntWithAggregatesFilter: () => PGInputFactoryWrapper<IntWithAggregatesFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
    };
type Model1CreateInputFactory<Types extends PGTypes> = {
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2CreateNestedOneWithoutModel1InputFactory<Types> | undefined, Types>;
        oneToMany: () => PGInputFactoryWrapper<Model3CreateNestedManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedCreateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UncheckedCreateNestedOneWithoutModel1InputFactory<Types> | undefined, Types>;
        oneToMany: () => PGInputFactoryWrapper<Model3UncheckedCreateNestedManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UpdateInputFactory<Types extends PGTypes> = {
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UpdateOneWithoutModel1InputFactory<Types> | undefined, Types>;
        oneToMany: () => PGInputFactoryWrapper<Model3UpdateManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedUpdateInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UncheckedUpdateOneWithoutModel1InputFactory<Types> | undefined, Types>;
        oneToMany: () => PGInputFactoryWrapper<Model3UncheckedUpdateManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1CreateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model1UpdateManyMutationInputFactory<Types extends PGTypes> = {
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model1UncheckedUpdateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model2CreateInputFactory<Types extends PGTypes> = {
        model1: () => PGInputFactoryWrapper<Model1CreateNestedOneWithoutOneToOneInputFactory<Types>, Types>;
    };
type Model2UncheckedCreateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        model1Id: PGInputFactory<number, 'int', Types>;
    };
type Model2UpdateInputFactory<Types extends PGTypes> = {
        model1: () => PGInputFactoryWrapper<Model1UpdateOneRequiredWithoutOneToOneInputFactory<Types> | undefined, Types>;
    };
type Model2UncheckedUpdateInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type Model2CreateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        model1Id: PGInputFactory<number, 'int', Types>;
    };
type Model2UpdateManyMutationInputFactory<Types extends PGTypes> = {};
type Model2UncheckedUpdateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type Model3CreateInputFactory<Types extends PGTypes> = {
        model1: () => PGInputFactoryWrapper<Model1CreateNestedOneWithoutOneToManyInputFactory<Types>, Types>;
    };
type Model3UncheckedCreateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        model1Id: PGInputFactory<number, 'int', Types>;
    };
type Model3UpdateInputFactory<Types extends PGTypes> = {
        model1: () => PGInputFactoryWrapper<Model1UpdateOneRequiredWithoutOneToManyInputFactory<Types> | undefined, Types>;
    };
type Model3UncheckedUpdateInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type Model3CreateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        model1Id: PGInputFactory<number, 'int', Types>;
    };
type Model3UpdateManyMutationInputFactory<Types extends PGTypes> = {};
type Model3UncheckedUpdateManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type IntFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'int', Types>;
        in: PGInputFactory<number[] | undefined, 'int', Types>;
        notIn: PGInputFactory<number[] | undefined, 'int', Types>;
        lt: PGInputFactory<number | undefined, 'int', Types>;
        lte: PGInputFactory<number | undefined, 'int', Types>;
        gt: PGInputFactory<number | undefined, 'int', Types>;
        gte: PGInputFactory<number | undefined, 'int', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            NestedIntFilter: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>
            }>;
    };
type StringFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<string | undefined, 'string', Types>;
        in: PGInputFactory<string[] | undefined, 'string', Types>;
        notIn: PGInputFactory<string[] | undefined, 'string', Types>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        mode: PGInputFactory<QueryModeFactory | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            NestedStringFilter: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>
            }>;
    };
type JsonFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
    };
type FloatFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'float', Types>;
        in: PGInputFactory<number[] | undefined, 'float', Types>;
        notIn: PGInputFactory<number[] | undefined, 'float', Types>;
        lt: PGInputFactory<number | undefined, 'float', Types>;
        lte: PGInputFactory<number | undefined, 'float', Types>;
        gt: PGInputFactory<number | undefined, 'float', Types>;
        gte: PGInputFactory<number | undefined, 'float', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            NestedFloatFilter: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>
            }>;
    };
type BoolFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<boolean | undefined, 'boolean', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            NestedBoolFilter: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>
            }>;
    };
type BigIntFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        in: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        notIn: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        lt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        lte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            NestedBigIntFilter: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>
            }>;
    };
type DateTimeFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Date | undefined, 'dateTime', Types>;
        in: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        notIn: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        lt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        lte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            NestedDateTimeFilter: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>
            }>;
    };
type BytesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Buffer | undefined, 'bytes', Types>;
        in: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        notIn: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            NestedBytesFilter: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>
            }>;
    };
type DecimalFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        in: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        notIn: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        lt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        lte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            NestedDecimalFilter: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>
            }>;
    };
type StringNullableFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        mode: PGInputFactory<QueryModeFactory | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NestedStringNullableFilter: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type StringNullableListFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        has: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        hasEvery: PGInputFactory<string[] | undefined, 'string', Types>;
        hasSome: PGInputFactory<string[] | undefined, 'string', Types>;
        isEmpty: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type EnumSomeEnumFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>;
        in: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        notIn: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            NestedEnumSomeEnumFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>
            }>;
    };
type EnumSomeEnum2NullableListFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum2Factory[] | null | undefined, 'enum', Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | null | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        has: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum2Factory | null | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        hasEvery: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>;
        hasSome: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>;
        isEmpty: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type EnumSomeEnum3NullableFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NestedEnumSomeEnum3NullableFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model2RelationFilterFactory<Types extends PGTypes> = {
        is: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | null | undefined, Types>,
            Model2WhereInput: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        isNot: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | null | undefined, Types>,
            Model2WhereInput: () => PGInputFactoryWrapper<Model2WhereInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model3ListRelationFilterFactory<Types extends PGTypes> = {
        every: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        some: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
        none: () => PGInputFactoryWrapper<Model3WhereInputFactory<Types> | undefined, Types>;
    };
type Model3OrderByRelationAggregateInputFactory<Types extends PGTypes> = {
        _count: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1CountOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        string: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        json: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        boolean: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        dateTime: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bytes: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        nullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        list: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enum: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumList: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumNullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1AvgOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1MaxOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        string: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        boolean: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        dateTime: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bytes: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        nullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enum: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumNullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1MinOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        string: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        boolean: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        dateTime: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bytes: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        nullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enum: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        enumNullable: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1SumOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        int: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        float: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        bigInt: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        decimal: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type IntWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'int', Types>;
        in: PGInputFactory<number[] | undefined, 'int', Types>;
        notIn: PGInputFactory<number[] | undefined, 'int', Types>;
        lt: PGInputFactory<number | undefined, 'int', Types>;
        lte: PGInputFactory<number | undefined, 'int', Types>;
        gt: PGInputFactory<number | undefined, 'int', Types>;
        gte: PGInputFactory<number | undefined, 'int', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            NestedIntWithAggregatesFilter: () => PGInputFactoryWrapper<NestedIntWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
    };
type StringWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<string | undefined, 'string', Types>;
        in: PGInputFactory<string[] | undefined, 'string', Types>;
        notIn: PGInputFactory<string[] | undefined, 'string', Types>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        mode: PGInputFactory<QueryModeFactory | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            NestedStringWithAggregatesFilter: () => PGInputFactoryWrapper<NestedStringWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>;
    };
type JsonWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedJsonFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedJsonFilterFactory<Types> | undefined, Types>;
    };
type FloatWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'float', Types>;
        in: PGInputFactory<number[] | undefined, 'float', Types>;
        notIn: PGInputFactory<number[] | undefined, 'float', Types>;
        lt: PGInputFactory<number | undefined, 'float', Types>;
        lte: PGInputFactory<number | undefined, 'float', Types>;
        gt: PGInputFactory<number | undefined, 'float', Types>;
        gte: PGInputFactory<number | undefined, 'float', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            NestedFloatWithAggregatesFilter: () => PGInputFactoryWrapper<NestedFloatWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
    };
type BoolWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<boolean | undefined, 'boolean', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            NestedBoolWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBoolWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>;
    };
type BigIntWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        in: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        notIn: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        lt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        lte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            NestedBigIntWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBigIntWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
    };
type DateTimeWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Date | undefined, 'dateTime', Types>;
        in: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        notIn: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        lt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        lte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            NestedDateTimeWithAggregatesFilter: () => PGInputFactoryWrapper<NestedDateTimeWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>;
    };
type BytesWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Buffer | undefined, 'bytes', Types>;
        in: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        notIn: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            NestedBytesWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBytesWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>;
    };
type DecimalWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        in: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        notIn: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        lt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        lte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            NestedDecimalWithAggregatesFilter: () => PGInputFactoryWrapper<NestedDecimalWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
    };
type StringNullableWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        mode: PGInputFactory<QueryModeFactory | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NestedStringNullableWithAggregatesFilter: () => PGInputFactoryWrapper<NestedStringNullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntNullableFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | undefined, Types>;
    };
type EnumSomeEnumWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>;
        in: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        notIn: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            NestedEnumSomeEnumWithAggregatesFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnumWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>;
    };
type EnumSomeEnum3NullableWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NestedEnumSomeEnum3NullableWithAggregatesFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntNullableFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | undefined, Types>;
    };
type Model1RelationFilterFactory<Types extends PGTypes> = {
        is: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
        isNot: () => PGInputFactoryWrapper<Model1WhereInputFactory<Types> | undefined, Types>;
    };
type Model2CountOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model2AvgOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model2MaxOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model2MinOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model2SumOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3CountOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3AvgOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3MaxOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3MinOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model3SumOrderByAggregateInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
        model1Id: PGInputFactory<SortOrderFactory | undefined, 'enum', Types>;
    };
type Model1CreatelistInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<string[], 'string', Types>;
    };
type Model1CreateenumListInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<SomeEnum2Factory[], 'enum', Types>;
    };
type Model2CreateNestedOneWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model2CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
    };
type Model3CreateNestedManyWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        connectOrCreate: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        createMany: () => PGInputFactoryWrapper<Model3CreateManyModel1InputEnvelopeFactory<Types> | undefined, Types>;
        connect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
    };
type Model2UncheckedCreateNestedOneWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model2CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
    };
type Model3UncheckedCreateNestedManyWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        connectOrCreate: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        createMany: () => PGInputFactoryWrapper<Model3CreateManyModel1InputEnvelopeFactory<Types> | undefined, Types>;
        connect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
    };
type StringFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<string | undefined, 'string', Types>;
    };
type IntFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<number | undefined, 'int', Types>;
        increment: PGInputFactory<number | undefined, 'int', Types>;
        decrement: PGInputFactory<number | undefined, 'int', Types>;
        multiply: PGInputFactory<number | undefined, 'int', Types>;
        divide: PGInputFactory<number | undefined, 'int', Types>;
    };
type FloatFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<number | undefined, 'float', Types>;
        increment: PGInputFactory<number | undefined, 'float', Types>;
        decrement: PGInputFactory<number | undefined, 'float', Types>;
        multiply: PGInputFactory<number | undefined, 'float', Types>;
        divide: PGInputFactory<number | undefined, 'float', Types>;
    };
type BoolFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type BigIntFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        increment: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        decrement: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        multiply: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        divide: PGInputFactory<bigint | undefined, 'bigInt', Types>;
    };
type DateTimeFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<Date | undefined, 'dateTime', Types>;
    };
type BytesFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<Buffer | undefined, 'bytes', Types>;
    };
type DecimalFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        increment: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        decrement: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        multiply: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        divide: PGInputFactory<Decimal | undefined, 'decimal', Types>;
    };
type NullableStringFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model1UpdatelistInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<string[] | undefined, 'string', Types>;
        push: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
    };
type EnumSomeEnumFieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>;
    };
type Model1UpdateenumListInputFactory<Types extends PGTypes> = {
        set: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>;
        push: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum2Factory | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
    };
type NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types extends PGTypes> = {
        set: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type Model2UpdateOneWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model2CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>;
        upsert: () => PGInputFactoryWrapper<Model2UpsertWithoutModel1InputFactory<Types> | undefined, Types>;
        disconnect: PGInputFactory<boolean | undefined, 'boolean', Types>;
        delete: PGInputFactory<boolean | undefined, 'boolean', Types>;
        connect: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedUpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedUpdateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
    };
type Model3UpdateManyWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        connectOrCreate: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        upsert: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpsertWithWhereUniqueWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpsertWithWhereUniqueWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        createMany: () => PGInputFactoryWrapper<Model3CreateManyModel1InputEnvelopeFactory<Types> | undefined, Types>;
        set: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        disconnect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        delete: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        connect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpdateWithWhereUniqueWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpdateWithWhereUniqueWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        updateMany: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpdateManyWithWhereWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpdateManyWithWhereWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        deleteMany: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>
            }>;
    };
type Model2UncheckedUpdateOneWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model2CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>;
        upsert: () => PGInputFactoryWrapper<Model2UpsertWithoutModel1InputFactory<Types> | undefined, Types>;
        disconnect: PGInputFactory<boolean | undefined, 'boolean', Types>;
        delete: PGInputFactory<boolean | undefined, 'boolean', Types>;
        connect: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types> | undefined, Types>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model2UncheckedUpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedUpdateWithoutModel1InputFactory<Types> | undefined, Types>
            }>;
    };
type Model3UncheckedUpdateManyWithoutModel1InputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UncheckedCreateWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UncheckedCreateWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        connectOrCreate: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateOrConnectWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3CreateOrConnectWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3CreateOrConnectWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        upsert: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpsertWithWhereUniqueWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpsertWithWhereUniqueWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        createMany: () => PGInputFactoryWrapper<Model3CreateManyModel1InputEnvelopeFactory<Types> | undefined, Types>;
        set: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        disconnect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        delete: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        connect: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types> | undefined, Types>,
            Model3WhereUniqueInput: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>,
            Model3WhereUniqueInputList: () => PGInputFactoryWrapper<Array<Model3WhereUniqueInputFactory<Types>> | undefined, Types>
            }>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpdateWithWhereUniqueWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpdateWithWhereUniqueWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        updateMany: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types> | undefined, Types>,
            Model3UpdateManyWithWhereWithoutModel1Input: () => PGInputFactoryWrapper<Array<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types>> | undefined, Types>,
            Model3UpdateManyWithWhereWithoutModel1InputList: () => PGInputFactoryWrapper<Array<Model3UpdateManyWithWhereWithoutModel1InputFactory<Types>> | undefined, Types>
            }>;
        deleteMany: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>
            }>;
    };
type Model1CreateNestedOneWithoutOneToOneInputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1CreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1UncheckedCreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToOneInputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model1CreateOrConnectWithoutOneToOneInputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
    };
type Model1UpdateOneRequiredWithoutOneToOneInputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1CreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1UncheckedCreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToOneInputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model1CreateOrConnectWithoutOneToOneInputFactory<Types> | undefined, Types>;
        upsert: () => PGInputFactoryWrapper<Model1UpsertWithoutOneToOneInputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1UpdateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToOneInputFactory<Types> | undefined, Types>,
            Model1UncheckedUpdateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateWithoutOneToOneInputFactory<Types> | undefined, Types>
            }>;
    };
type Model1CreateNestedOneWithoutOneToManyInputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1CreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1UncheckedCreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToManyInputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model1CreateOrConnectWithoutOneToManyInputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
    };
type Model1UpdateOneRequiredWithoutOneToManyInputFactory<Types extends PGTypes> = {
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1CreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1UncheckedCreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToManyInputFactory<Types> | undefined, Types>
            }>;
        connectOrCreate: () => PGInputFactoryWrapper<Model1CreateOrConnectWithoutOneToManyInputFactory<Types> | undefined, Types>;
        upsert: () => PGInputFactoryWrapper<Model1UpsertWithoutOneToManyInputFactory<Types> | undefined, Types>;
        connect: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types> | undefined, Types>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1UpdateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToManyInputFactory<Types> | undefined, Types>,
            Model1UncheckedUpdateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateWithoutOneToManyInputFactory<Types> | undefined, Types>
            }>;
    };
type NestedIntFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'int', Types>;
        in: PGInputFactory<number[] | undefined, 'int', Types>;
        notIn: PGInputFactory<number[] | undefined, 'int', Types>;
        lt: PGInputFactory<number | undefined, 'int', Types>;
        lte: PGInputFactory<number | undefined, 'int', Types>;
        gt: PGInputFactory<number | undefined, 'int', Types>;
        gte: PGInputFactory<number | undefined, 'int', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            NestedIntFilter: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedStringFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<string | undefined, 'string', Types>;
        in: PGInputFactory<string[] | undefined, 'string', Types>;
        notIn: PGInputFactory<string[] | undefined, 'string', Types>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            NestedStringFilter: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedFloatFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'float', Types>;
        in: PGInputFactory<number[] | undefined, 'float', Types>;
        notIn: PGInputFactory<number[] | undefined, 'float', Types>;
        lt: PGInputFactory<number | undefined, 'float', Types>;
        lte: PGInputFactory<number | undefined, 'float', Types>;
        gt: PGInputFactory<number | undefined, 'float', Types>;
        gte: PGInputFactory<number | undefined, 'float', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            NestedFloatFilter: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedBoolFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<boolean | undefined, 'boolean', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            NestedBoolFilter: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedBigIntFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        in: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        notIn: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        lt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        lte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            NestedBigIntFilter: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedDateTimeFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Date | undefined, 'dateTime', Types>;
        in: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        notIn: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        lt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        lte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            NestedDateTimeFilter: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedBytesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Buffer | undefined, 'bytes', Types>;
        in: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        notIn: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            NestedBytesFilter: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedDecimalFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        in: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        notIn: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        lt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        lte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            NestedDecimalFilter: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedStringNullableFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NestedStringNullableFilter: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type NestedEnumSomeEnumFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>;
        in: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        notIn: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            NestedEnumSomeEnumFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>
            }>;
    };
type NestedEnumSomeEnum3NullableFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NestedEnumSomeEnum3NullableFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type NestedIntWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'int', Types>;
        in: PGInputFactory<number[] | undefined, 'int', Types>;
        notIn: PGInputFactory<number[] | undefined, 'int', Types>;
        lt: PGInputFactory<number | undefined, 'int', Types>;
        lte: PGInputFactory<number | undefined, 'int', Types>;
        gt: PGInputFactory<number | undefined, 'int', Types>;
        gte: PGInputFactory<number | undefined, 'int', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            NestedIntWithAggregatesFilter: () => PGInputFactoryWrapper<NestedIntWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
    };
type NestedStringWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<string | undefined, 'string', Types>;
        in: PGInputFactory<string[] | undefined, 'string', Types>;
        notIn: PGInputFactory<string[] | undefined, 'string', Types>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            NestedStringWithAggregatesFilter: () => PGInputFactoryWrapper<NestedStringWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedStringFilterFactory<Types> | undefined, Types>;
    };
type NestedJsonFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            JsonNullValueFilter: PGInputFactory<JsonNullValueFilterFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
    };
type NestedFloatWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<number | undefined, 'float', Types>;
        in: PGInputFactory<number[] | undefined, 'float', Types>;
        notIn: PGInputFactory<number[] | undefined, 'float', Types>;
        lt: PGInputFactory<number | undefined, 'float', Types>;
        lte: PGInputFactory<number | undefined, 'float', Types>;
        gt: PGInputFactory<number | undefined, 'float', Types>;
        gte: PGInputFactory<number | undefined, 'float', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            NestedFloatWithAggregatesFilter: () => PGInputFactoryWrapper<NestedFloatWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
    };
type NestedBoolWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<boolean | undefined, 'boolean', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            NestedBoolWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBoolWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBoolFilterFactory<Types> | undefined, Types>;
    };
type NestedBigIntWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        in: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        notIn: PGInputFactory<bigint[] | undefined, 'bigInt', Types>;
        lt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        lte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gt: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        gte: PGInputFactory<bigint | undefined, 'bigInt', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            NestedBigIntWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBigIntWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedFloatFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBigIntFilterFactory<Types> | undefined, Types>;
    };
type NestedDateTimeWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Date | undefined, 'dateTime', Types>;
        in: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        notIn: PGInputFactory<Date[] | undefined, 'dateTime', Types>;
        lt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        lte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gt: PGInputFactory<Date | undefined, 'dateTime', Types>;
        gte: PGInputFactory<Date | undefined, 'dateTime', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            NestedDateTimeWithAggregatesFilter: () => PGInputFactoryWrapper<NestedDateTimeWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedDateTimeFilterFactory<Types> | undefined, Types>;
    };
type NestedBytesWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Buffer | undefined, 'bytes', Types>;
        in: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        notIn: PGInputFactory<Buffer[] | undefined, 'bytes', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            NestedBytesWithAggregatesFilter: () => PGInputFactoryWrapper<NestedBytesWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedBytesFilterFactory<Types> | undefined, Types>;
    };
type NestedDecimalWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        in: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        notIn: PGInputFactory<Decimal[] | undefined, 'decimal', Types>;
        lt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        lte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gt: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        gte: PGInputFactory<Decimal | undefined, 'decimal', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            NestedDecimalWithAggregatesFilter: () => PGInputFactoryWrapper<NestedDecimalWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _avg: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _sum: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedDecimalFilterFactory<Types> | undefined, Types>;
    };
type NestedStringNullableWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<string[] | null | undefined, 'string', Types>,
            StringList: PGInputFactory<string[] | null | undefined, 'string', Types>,
            String: PGInputFactory<string[] | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        lt: PGInputFactory<string | undefined, 'string', Types>;
        lte: PGInputFactory<string | undefined, 'string', Types>;
        gt: PGInputFactory<string | undefined, 'string', Types>;
        gte: PGInputFactory<string | undefined, 'string', Types>;
        contains: PGInputFactory<string | undefined, 'string', Types>;
        startsWith: PGInputFactory<string | undefined, 'string', Types>;
        endsWith: PGInputFactory<string | undefined, 'string', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NestedStringNullableWithAggregatesFilter: () => PGInputFactoryWrapper<NestedStringNullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntNullableFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedStringNullableFilterFactory<Types> | undefined, Types>;
    };
type NestedIntNullableFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<number | null | undefined, 'int', Types>,
            Int: PGInputFactory<number | null | undefined, 'int', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<number[] | null | undefined, 'int', Types>,
            IntList: PGInputFactory<number[] | null | undefined, 'int', Types>,
            Int: PGInputFactory<number[] | null | undefined, 'int', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<number[] | null | undefined, 'int', Types>,
            IntList: PGInputFactory<number[] | null | undefined, 'int', Types>,
            Int: PGInputFactory<number[] | null | undefined, 'int', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        lt: PGInputFactory<number | undefined, 'int', Types>;
        lte: PGInputFactory<number | undefined, 'int', Types>;
        gt: PGInputFactory<number | undefined, 'int', Types>;
        gte: PGInputFactory<number | undefined, 'int', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<number | null | undefined, 'int', Types>,
            Int: PGInputFactory<number | null | undefined, 'int', Types>,
            NestedIntNullableFilter: () => PGInputFactoryWrapper<NestedIntNullableFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
    };
type NestedEnumSomeEnumWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>;
        in: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        notIn: PGInputFactory<SomeEnumFactory[] | undefined, 'enum', Types>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            NestedEnumSomeEnumWithAggregatesFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnumWithAggregatesFilterFactory<Types> | undefined, Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedEnumSomeEnumFilterFactory<Types> | undefined, Types>;
    };
type NestedEnumSomeEnum3NullableWithAggregatesFilterFactory<Types extends PGTypes> = {
        equals: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        in: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        notIn: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3List: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory[] | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        not: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NestedEnumSomeEnum3NullableWithAggregatesFilter: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableWithAggregatesFilterFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        _count: () => PGInputFactoryWrapper<NestedIntNullableFilterFactory<Types> | undefined, Types>;
        _min: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | undefined, Types>;
        _max: () => PGInputFactoryWrapper<NestedEnumSomeEnum3NullableFilterFactory<Types> | undefined, Types>;
    };
type Model2CreateWithoutModel1InputFactory<Types extends PGTypes> = {};
type Model2UncheckedCreateWithoutModel1InputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model2CreateOrConnectWithoutModel1InputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model2WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types>, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types>, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types>, Types>
            }>;
    };
type Model3CreateWithoutModel1InputFactory<Types extends PGTypes> = {};
type Model3UncheckedCreateWithoutModel1InputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model3CreateOrConnectWithoutModel1InputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types>, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types>, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UncheckedCreateWithoutModel1InputFactory<Types>, Types>
            }>;
    };
type Model3CreateManyModel1InputEnvelopeFactory<Types extends PGTypes> = {
        data: () => PGInputFactoryWrapper<Array<Model3CreateManyModel1InputFactory<Types>>, Types>;
        skipDuplicates: PGInputFactory<boolean | undefined, 'boolean', Types>;
    };
type Model2UpsertWithoutModel1InputFactory<Types extends PGTypes> = {
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types>, Types>,
            Model2UpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UpdateWithoutModel1InputFactory<Types>, Types>,
            Model2UncheckedUpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedUpdateWithoutModel1InputFactory<Types>, Types>
            }>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types>, Types>,
            Model2CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2CreateWithoutModel1InputFactory<Types>, Types>,
            Model2UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model2UncheckedCreateWithoutModel1InputFactory<Types>, Types>
            }>;
    };
type Model2UpdateWithoutModel1InputFactory<Types extends PGTypes> = {};
type Model2UncheckedUpdateWithoutModel1InputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type Model3UpsertWithWhereUniqueWithoutModel1InputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateWithoutModel1InputFactory<Types>, Types>,
            Model3UpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UpdateWithoutModel1InputFactory<Types>, Types>,
            Model3UncheckedUpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UncheckedUpdateWithoutModel1InputFactory<Types>, Types>
            }>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types>, Types>,
            Model3CreateWithoutModel1Input: () => PGInputFactoryWrapper<Model3CreateWithoutModel1InputFactory<Types>, Types>,
            Model3UncheckedCreateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UncheckedCreateWithoutModel1InputFactory<Types>, Types>
            }>;
    };
type Model3UpdateWithWhereUniqueWithoutModel1InputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3WhereUniqueInputFactory<Types>, Types>;
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateWithoutModel1InputFactory<Types>, Types>,
            Model3UpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UpdateWithoutModel1InputFactory<Types>, Types>,
            Model3UncheckedUpdateWithoutModel1Input: () => PGInputFactoryWrapper<Model3UncheckedUpdateWithoutModel1InputFactory<Types>, Types>
            }>;
    };
type Model3UpdateManyWithWhereWithoutModel1InputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model3ScalarWhereInputFactory<Types>, Types>;
        data: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3UpdateManyMutationInputFactory<Types>, Types>,
            Model3UpdateManyMutationInput: () => PGInputFactoryWrapper<Model3UpdateManyMutationInputFactory<Types>, Types>,
            Model3UncheckedUpdateManyWithoutOneToManyInput: () => PGInputFactoryWrapper<Model3UncheckedUpdateManyWithoutOneToManyInputFactory<Types>, Types>
            }>;
    };
type Model3ScalarWhereInputFactory<Types extends PGTypes> = {
        AND: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>
            }>;
        OR: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>;
        NOT: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model3ScalarWhereInputFactory<Types> | undefined, Types>,
            Model3ScalarWhereInput: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>,
            Model3ScalarWhereInputList: () => PGInputFactoryWrapper<Array<Model3ScalarWhereInputFactory<Types>> | undefined, Types>
            }>;
        id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
        model1Id: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            IntFilter: () => PGInputFactoryWrapper<IntFilterFactory<Types> | undefined, Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>
            }>;
    };
type Model1CreateWithoutOneToOneInputFactory<Types extends PGTypes> = {
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToMany: () => PGInputFactoryWrapper<Model3CreateNestedManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedCreateWithoutOneToOneInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToMany: () => PGInputFactoryWrapper<Model3UncheckedCreateNestedManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1CreateOrConnectWithoutOneToOneInputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types>, Types>,
            Model1CreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types>, Types>,
            Model1UncheckedCreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToOneInputFactory<Types>, Types>
            }>;
    };
type Model1UpsertWithoutOneToOneInputFactory<Types extends PGTypes> = {
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToOneInputFactory<Types>, Types>,
            Model1UpdateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToOneInputFactory<Types>, Types>,
            Model1UncheckedUpdateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateWithoutOneToOneInputFactory<Types>, Types>
            }>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types>, Types>,
            Model1CreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToOneInputFactory<Types>, Types>,
            Model1UncheckedCreateWithoutOneToOneInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToOneInputFactory<Types>, Types>
            }>;
    };
type Model1UpdateWithoutOneToOneInputFactory<Types extends PGTypes> = {
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToMany: () => PGInputFactoryWrapper<Model3UpdateManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedUpdateWithoutOneToOneInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToMany: () => PGInputFactoryWrapper<Model3UncheckedUpdateManyWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1CreateWithoutOneToManyInputFactory<Types extends PGTypes> = {
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2CreateNestedOneWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedCreateWithoutOneToManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
        string: PGInputFactory<string, 'string', Types>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory, 'enum', Types>,
            Json: PGInputFactory<string, 'json', Types>
            }>;
        int: PGInputFactory<number, 'int', Types>;
        float: PGInputFactory<number, 'float', Types>;
        boolean: PGInputFactory<boolean, 'boolean', Types>;
        bigInt: PGInputFactory<bigint, 'bigInt', Types>;
        dateTime: PGInputFactory<Date, 'dateTime', Types>;
        bytes: PGInputFactory<Buffer, 'bytes', Types>;
        decimal: PGInputFactory<Decimal, 'decimal', Types>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            Model1CreatelistInput: () => PGInputFactoryWrapper<Model1CreatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactory<SomeEnumFactory, 'enum', Types>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            Model1CreateenumListInput: () => PGInputFactoryWrapper<Model1CreateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UncheckedCreateNestedOneWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1CreateOrConnectWithoutOneToManyInputFactory<Types extends PGTypes> = {
        where: () => PGInputFactoryWrapper<Model1WhereUniqueInputFactory<Types>, Types>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types>, Types>,
            Model1CreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types>, Types>,
            Model1UncheckedCreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToManyInputFactory<Types>, Types>
            }>;
    };
type Model1UpsertWithoutOneToManyInputFactory<Types extends PGTypes> = {
        update: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToManyInputFactory<Types>, Types>,
            Model1UpdateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UpdateWithoutOneToManyInputFactory<Types>, Types>,
            Model1UncheckedUpdateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedUpdateWithoutOneToManyInputFactory<Types>, Types>
            }>;
        create: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types>, Types>,
            Model1CreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1CreateWithoutOneToManyInputFactory<Types>, Types>,
            Model1UncheckedCreateWithoutOneToManyInput: () => PGInputFactoryWrapper<Model1UncheckedCreateWithoutOneToManyInputFactory<Types>, Types>
            }>;
    };
type Model1UpdateWithoutOneToManyInputFactory<Types extends PGTypes> = {
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UpdateOneWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model1UncheckedUpdateWithoutOneToManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        string: PGInputFactoryUnion<{
            __default: PGInputFactory<string | undefined, 'string', Types>,
            String: PGInputFactory<string | undefined, 'string', Types>,
            StringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<StringFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        json: PGInputFactoryUnion<{
            __default: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            JsonNullValueInput: PGInputFactory<JsonNullValueInputFactory | undefined, 'enum', Types>,
            Json: PGInputFactory<string | undefined, 'json', Types>
            }>;
        int: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        float: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'float', Types>,
            Float: PGInputFactory<number | undefined, 'float', Types>,
            FloatFieldUpdateOperationsInput: () => PGInputFactoryWrapper<FloatFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        boolean: PGInputFactoryUnion<{
            __default: PGInputFactory<boolean | undefined, 'boolean', Types>,
            Boolean: PGInputFactory<boolean | undefined, 'boolean', Types>,
            BoolFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BoolFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bigInt: PGInputFactoryUnion<{
            __default: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigInt: PGInputFactory<bigint | undefined, 'bigInt', Types>,
            BigIntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BigIntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        dateTime: PGInputFactoryUnion<{
            __default: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTime: PGInputFactory<Date | undefined, 'dateTime', Types>,
            DateTimeFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DateTimeFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        bytes: PGInputFactoryUnion<{
            __default: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            Bytes: PGInputFactory<Buffer | undefined, 'bytes', Types>,
            BytesFieldUpdateOperationsInput: () => PGInputFactoryWrapper<BytesFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        decimal: PGInputFactoryUnion<{
            __default: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            Decimal: PGInputFactory<Decimal | undefined, 'decimal', Types>,
            DecimalFieldUpdateOperationsInput: () => PGInputFactoryWrapper<DecimalFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        nullable: PGInputFactoryUnion<{
            __default: PGInputFactory<string | null | undefined, 'string', Types>,
            String: PGInputFactory<string | null | undefined, 'string', Types>,
            NullableStringFieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableStringFieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        list: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            Model1UpdatelistInput: () => PGInputFactoryWrapper<Model1UpdatelistInputFactory<Types> | undefined, Types>,
            StringList: PGInputFactory<string[] | undefined, 'string', Types>,
            String: PGInputFactory<string[] | undefined, 'string', Types>
            }>;
        enum: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            SomeEnum: PGInputFactory<SomeEnumFactory | undefined, 'enum', Types>,
            EnumSomeEnumFieldUpdateOperationsInput: () => PGInputFactoryWrapper<EnumSomeEnumFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
        enumList: PGInputFactoryUnion<{
            __default: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            Model1UpdateenumListInput: () => PGInputFactoryWrapper<Model1UpdateenumListInputFactory<Types> | undefined, Types>,
            SomeEnum2List: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>,
            SomeEnum2: PGInputFactory<SomeEnum2Factory[] | undefined, 'enum', Types>
            }>;
        enumNullable: PGInputFactoryUnion<{
            __default: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            SomeEnum3: PGInputFactory<SomeEnum3Factory | null | undefined, 'enum', Types>,
            NullableEnumSomeEnum3FieldUpdateOperationsInput: () => PGInputFactoryWrapper<NullableEnumSomeEnum3FieldUpdateOperationsInputFactory<Types> | null | undefined, Types>,
            Null: PGInputFactory<null | null | undefined, 'null', Types>
            }>;
        oneToOne: () => PGInputFactoryWrapper<Model2UncheckedUpdateOneWithoutModel1InputFactory<Types> | undefined, Types>;
    };
type Model3CreateManyModel1InputFactory<Types extends PGTypes> = {
        id: PGInputFactory<number | undefined, 'int', Types>;
    };
type Model3UpdateWithoutModel1InputFactory<Types extends PGTypes> = {};
type Model3UncheckedUpdateWithoutModel1InputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };
type Model3UncheckedUpdateManyWithoutOneToManyInputFactory<Types extends PGTypes> = {
        id: PGInputFactoryUnion<{
            __default: PGInputFactory<number | undefined, 'int', Types>,
            Int: PGInputFactory<number | undefined, 'int', Types>,
            IntFieldUpdateOperationsInput: () => PGInputFactoryWrapper<IntFieldUpdateOperationsInputFactory<Types> | undefined, Types>
            }>;
    };

interface Inputs<Types extends PGTypes> {
    findFirstModel1: PGInputFactoryWrapper<FindFirstModel1Factory<Types>, Types>;
    findManyModel1: PGInputFactoryWrapper<FindManyModel1Factory<Types>, Types>;
    aggregateModel1: PGInputFactoryWrapper<AggregateModel1Factory<Types>, Types>;
    groupByModel1: PGInputFactoryWrapper<GroupByModel1Factory<Types>, Types>;
    findUniqueModel1: PGInputFactoryWrapper<FindUniqueModel1Factory<Types>, Types>;
    findFirstModel2: PGInputFactoryWrapper<FindFirstModel2Factory<Types>, Types>;
    findManyModel2: PGInputFactoryWrapper<FindManyModel2Factory<Types>, Types>;
    aggregateModel2: PGInputFactoryWrapper<AggregateModel2Factory<Types>, Types>;
    groupByModel2: PGInputFactoryWrapper<GroupByModel2Factory<Types>, Types>;
    findUniqueModel2: PGInputFactoryWrapper<FindUniqueModel2Factory<Types>, Types>;
    findFirstModel3: PGInputFactoryWrapper<FindFirstModel3Factory<Types>, Types>;
    findManyModel3: PGInputFactoryWrapper<FindManyModel3Factory<Types>, Types>;
    aggregateModel3: PGInputFactoryWrapper<AggregateModel3Factory<Types>, Types>;
    groupByModel3: PGInputFactoryWrapper<GroupByModel3Factory<Types>, Types>;
    findUniqueModel3: PGInputFactoryWrapper<FindUniqueModel3Factory<Types>, Types>;
    createOneModel1: PGInputFactoryWrapper<CreateOneModel1Factory<Types>, Types>;
    upsertOneModel1: PGInputFactoryWrapper<UpsertOneModel1Factory<Types>, Types>;
    createManyModel1: PGInputFactoryWrapper<CreateManyModel1Factory<Types>, Types>;
    deleteOneModel1: PGInputFactoryWrapper<DeleteOneModel1Factory<Types>, Types>;
    updateOneModel1: PGInputFactoryWrapper<UpdateOneModel1Factory<Types>, Types>;
    updateManyModel1: PGInputFactoryWrapper<UpdateManyModel1Factory<Types>, Types>;
    deleteManyModel1: PGInputFactoryWrapper<DeleteManyModel1Factory<Types>, Types>;
    createOneModel2: PGInputFactoryWrapper<CreateOneModel2Factory<Types>, Types>;
    upsertOneModel2: PGInputFactoryWrapper<UpsertOneModel2Factory<Types>, Types>;
    createManyModel2: PGInputFactoryWrapper<CreateManyModel2Factory<Types>, Types>;
    deleteOneModel2: PGInputFactoryWrapper<DeleteOneModel2Factory<Types>, Types>;
    updateOneModel2: PGInputFactoryWrapper<UpdateOneModel2Factory<Types>, Types>;
    updateManyModel2: PGInputFactoryWrapper<UpdateManyModel2Factory<Types>, Types>;
    deleteManyModel2: PGInputFactoryWrapper<DeleteManyModel2Factory<Types>, Types>;
    createOneModel3: PGInputFactoryWrapper<CreateOneModel3Factory<Types>, Types>;
    upsertOneModel3: PGInputFactoryWrapper<UpsertOneModel3Factory<Types>, Types>;
    createManyModel3: PGInputFactoryWrapper<CreateManyModel3Factory<Types>, Types>;
    deleteOneModel3: PGInputFactoryWrapper<DeleteOneModel3Factory<Types>, Types>;
    updateOneModel3: PGInputFactoryWrapper<UpdateOneModel3Factory<Types>, Types>;
    updateManyModel3: PGInputFactoryWrapper<UpdateManyModel3Factory<Types>, Types>;
    deleteManyModel3: PGInputFactoryWrapper<DeleteManyModel3Factory<Types>, Types>;
    executeRaw: PGInputFactoryWrapper<ExecuteRawFactory<Types>, Types>;
    queryRaw: PGInputFactoryWrapper<QueryRawFactory<Types>, Types>;
}

export interface PGfyResponse<Types extends PGTypes> {
    objects: PGfyResponseObjects<Types>;
    enums: PGfyResponseEnums;
    models: PGfyResponseModels;
    inputs: Inputs<Types>;
}
"
`;
